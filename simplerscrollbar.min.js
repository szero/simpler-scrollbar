!function(e,t){"use strict";"object"==typeof exports?module.exports=t(window,document):e.SimplerScrollbar=t(window,document)}(this,function(e,t){"use strict";const n=e.requestAnimationFrame||e.setImmediate||function(e){return setTimeout(e)};addEventListener("DOMContentLoaded",function e(){removeEventListener("DOMContentLoaded",e,!0),t.getElementsByTagName("head")[0].insertAdjacentHTML("afterbegin",'<style type="text/css">\n.ss-wrapper {\n  overflow: hidden;\n  height: 100%;\n  width: 100%\n  position: relative;\n  z-index: 1;\n  float: left;\n}\n\n.ss-content {\n  height: 100%;\n  width: calc(100% + 0.8em);\n  padding: 0 0 0 0;\n  position: relative;\n  overflow-x: auto;\n  overflow-y: scroll;\n  box-sizing: border-box;\n}\n\n.ss-scroll {\n  position: relative;\n  background: rgba(127, 127, 127, 0.5);\n  width: 8px;\n  border-radius: 4px;\n  top: 0;\n  z-index: 2;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.25s linear;\n}\n\n.ss-container:hover .ss-scroll,\n.ss-container:active .ss-scroll {\n  opacity: 1;\n}\n\n.ss-grabbed {\n  -o-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n}\n</style>')},!0);class s{constructor({container:n,wrapper:s,content:r,rightOffset:i=0}={}){if(!n)throw new Error("You need to specify an element I can bind to");if(this.target=n,this.wrapper=s||t.createElement("div"),this.wrapper.setAttribute("class","ss-wrapper"),this.content=r||t.createElement("div"),this.content.setAttribute("class","ss-content"),this.content.style.width=`calc(100% + ${this.scrollWidth}px)`,!s&&!r){for(this.wrapper.appendChild(this.content);this.target.firstChild;)this.content.appendChild(this.target.firstChild);this.target.appendChild(this.wrapper)}this.target.insertAdjacentHTML("beforeend",'<div class="ss-scroll">'),this.bar=this.target.lastChild,this.eventArgs={passive:!0,capture:!0},this.dragDealer(),this.moveBar(i),e.addEventListener("resize",this.moveBar.bind(this,i),this.eventArgs),this.content.addEventListener("scroll",this.moveBar.bind(this,i),this.eventArgs),this.content.addEventListener("mouseenter",this.moveBar.bind(this,i),this.eventArgs),this.target.classList.add("ss-container");const o=e.getComputedStyle(n);"0px"===o.height&&"0px"!==o["max-height"]&&(n.style.height=o["max-height"])}get scrollWidth(){const e=t.createElement("div"),n=t.createElement("div");e.style.width=n.style.width="100%",e.style.overflow="scroll",t.body.appendChild(e).appendChild(n);const s=e.offsetWidth-n.offsetWidth;return e.parentNode.removeChild(e),s}moveBar(e){const t=this.content.scrollHeight,s=this.content.clientHeight,r=this,i=s/t;if(i>=1)return r.bar.style.opacity=0,void(r.bar.style.cursor="auto");this.scrollRatio=i>=.1?i:i*(.9+i),n(()=>{const n=100*r.scrollRatio;r.bar.style.cssText=`height: ${Math.max(n,10)}%;\n        top: ${r.content.scrollTop/t*(n>=10?100:90+n)}%;\n        right: ${-1*(r.target.clientWidth-r.bar.clientWidth+e)}px;`})}getOffsetFromEvent(e){let t=e.target.parentElement;if(!t||!t.offsetTop)return null;for(;t.offsetTop<1;){if(void 0===t)return null;t=t.parentElement}return void 0===t.offsetTop?null:t.offsetTop}dragDealer(){let e,s,r;const i=this;function o(t){if(null===r)return;const o=t.pageY-e;e<t.pageY?s+r<=t.clientY&&n(()=>{i.content.scrollTop+=o/i.scrollRatio}):r+i.target.clientHeight-(i.bar.clientHeight-s)>=t.clientY&&n(()=>{i.content.scrollTop+=o/i.scrollRatio}),e=t.pageY}function a(){i.bar.classList.remove("ss-grabbed"),t.body.classList.remove("ss-grabbed"),t.removeEventListener("mousemove",o,i.eventArgs),t.removeEventListener("mouseup",a,i.eventArgs)}i.bar.addEventListener("mousedown",n=>(i.bar.classList.add("ss-grabbed"),r=i.getOffsetFromEvent(n),e=n.pageY,s=n.clientY-n.target.offsetTop,t.body.classList.add("ss-grabbed"),t.addEventListener("mousemove",o,i.eventArgs),t.addEventListener("mouseup",a,i.eventArgs),!1),i.eventArgs)}}const r=function(e){const{container:t}=e;Object.prototype.hasOwnProperty.call(t,"data-simple-scrollbar")||Object.defineProperty(t,"data-simple-scrollbar",{value:new s(e)})};return{initContainer:r,initAll(){t.querySelectorAll("*[ss-container]").forEach(e=>{r({container:e})})}}});