const SimplerScrollbar=function(){"use strict";const e=window.requestAnimationFrame||window.setImmediate||function(e){return setTimeout(e)};addEventListener("DOMContentLoaded",function e(){removeEventListener("DOMContentLoaded",e,!0),document.getElementsByTagName("head")[0].insertAdjacentHTML("afterbegin",'<style type="text/css">\n.ss-wrapper {\n  overflow: hidden;\n  height: 100%;\n  width: 100%\n  position: relative;\n  z-index: 1;\n  float: left;\n}\n\n.ss-content {\n  height: 100%;\n  width: calc(100% + 0.8em);\n  padding: 0 0 0 0;\n  padding-right: 1em;\n  overflow: auto;\n  box-sizing: border-box;\n}\n\n.ss-scroll {\n  position: relative;\n  background: rgba(127, 127, 127, 0.5);\n  width: 8px;\n  border-radius: 4px;\n  top: 0;\n  z-index: 2;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.25s linear;\n}\n\n.ss-hidden {\n  display: none;\n}\n\n.ss-container:hover .ss-scroll,\n.ss-container:active .ss-scroll {\n  opacity: 1;\n}\n\n.ss-grabbed {\n  -o-user-select: none;\n  -ms-user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n}\n</style>')},!0);class t{constructor({container:e,wrapper:t,content:n,rightOffset:s=0}={}){if(!e)throw new Error("You need to specify an element I can bind to");if(this.target=e,this.bar='<div class="ss-scroll">',this.wrapper=t||document.createElement("div"),this.wrapper.setAttribute("class","ss-wrapper"),this.content=n||document.createElement("div"),this.content.setAttribute("class","ss-content"),!t&&!n){for(this.wrapper.appendChild(this.content);this.target.firstChild;)this.content.appendChild(this.target.firstChild);this.target.appendChild(this.wrapper)}this.target.insertAdjacentHTML("beforeend",'<div class="ss-scroll">'),this.bar=this.target.lastChild,this.dragDealer(),this.moveBar(s),window.addEventListener("resize",this.moveBar.bind(this,s),{passive:!0}),this.content.addEventListener("scroll",this.moveBar.bind(this,s),{passive:!0}),this.content.addEventListener("mouseenter",this.moveBar.bind(this,s),{passive:!0}),this.content.addEventListener("mouseout",this.moveBar.bind(this,s),{passive:!0,once:!0}),this.target.classList.add("ss-container");const i=window.getComputedStyle(e);"0px"===i.height&&"0px"!==i["max-height"]&&(e.style.height=i["max-height"])}moveBar(t){const n=this.content.scrollHeight,s=this.content.clientHeight,i=this;this.scrollRatio=s/n;const o=-1*(i.target.clientWidth-i.bar.clientWidth-t);e(()=>{i.scrollRatio>=1?i.bar.classList.add("ss-hidden"):(i.bar.classList.remove("ss-hidden"),i.bar.style.cssText=`height: ${Math.max(100*i.scrollRatio,0)}%;\n            top: ${i.content.scrollTop/n*100}%;\n            right: ${o}px;`)})}dragDealer(){let t;const n=this;function s(s){const i=s.pageY-t;t=s.pageY,e(()=>{n.content.scrollTop+=i/n.scrollRatio})}function i(){n.bar.classList.remove("ss-grabbed"),document.body.classList.remove("ss-grabbed"),document.removeEventListener("mousemove",s,{passive:!0}),document.removeEventListener("mouseup",i,{passive:!0})}n.bar.addEventListener("mousedown",e=>(n.bar.classList.add("ss-grabbed"),t=e.pageY,document.body.classList.add("ss-grabbed"),document.addEventListener("mousemove",s,{passive:!0}),document.addEventListener("mouseup",i,{passive:!0}),!1),{passive:!0})}}const n=function(e){const{container:n}=e;Object.prototype.hasOwnProperty.call(n,"data-simple-scrollbar")||Object.defineProperty(n,"data-simple-scrollbar",{value:new t(e)})};return{initContainer:n,initAll(){document.querySelectorAll("*[ss-container]").forEach(e=>{n({container:e})})}}}.call(this);